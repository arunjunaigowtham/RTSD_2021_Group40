[0.000000] (-) TimerEvent: {}
[0.005296] (-) JobUnselected: {'identifier': 'cpp_parameters'}
[0.005364] (-) JobUnselected: {'identifier': 'my_package'}
[0.005402] (-) JobUnselected: {'identifier': 'turtlesim'}
[0.005442] (cpp_pubsub) JobQueued: {'identifier': 'cpp_pubsub', 'dependencies': OrderedDict()}
[0.005482] (cpp_pubsub) JobStarted: {'identifier': 'cpp_pubsub'}
[0.039671] (cpp_pubsub) JobProgress: {'identifier': 'cpp_pubsub', 'progress': 'cmake'}
[0.049317] (cpp_pubsub) JobProgress: {'identifier': 'cpp_pubsub', 'progress': 'build'}
[0.052632] (cpp_pubsub) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/rtsd-user/dev_ws/build/cpp_pubsub', '--', '-j1', '-l1'], 'cwd': '/home/rtsd-user/dev_ws/build/cpp_pubsub', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'rtsd-user'), ('LC_TIME', 'nl_NL.UTF-8'), ('SSH_AGENT_PID', '1176'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/opt/ros/galactic/opt/yaml_cpp_vendor/lib:/opt/ros/galactic/opt/rviz_ogre_vendor/lib:/opt/ros/galactic/lib/x86_64-linux-gnu:/opt/ros/galactic/lib'), ('HOME', '/home/rtsd-user'), ('OLDPWD', '/home/rtsd-user/dev_ws/src/cpp_pubsub/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'nl_NL.UTF-8'), ('MANAGERPID', '952'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('ROS_DISTRO', 'galactic'), ('LOGNAME', 'rtsd-user'), ('JOURNAL_STREAM', '8:30583'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'rtsd-user'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/galactic/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/rtsd-vm:@/tmp/.ICE-unix/1227,unix/rtsd-vm:/tmp/.ICE-unix/1227'), ('INVOCATION_ID', 'd594878c5c95416db09fd8bf7e53ea2f'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'nl_NL.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/a7c96540_2db1_452f_b88e_829f7e071ea8'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'nl_NL.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.110'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/galactic'), ('SHELL', '/bin/bash'), ('LC_NAME', 'nl_NL.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'nl_NL.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('LC_IDENTIFICATION', 'nl_NL.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/rtsd-user/dev_ws/build/cpp_pubsub'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/galactic/lib/python3.8/site-packages'), ('LC_NUMERIC', 'nl_NL.UTF-8'), ('LC_PAPER', 'nl_NL.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/opt/ros/galactic')]), 'shell': False}
[0.091965] (-) TimerEvent: {}
[0.192503] (-) TimerEvent: {}
[0.195997] (cpp_pubsub) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target listener\x1b[0m\n'}
[0.271064] (cpp_pubsub) StdoutLine: {'line': b'[ 25%] \x1b[32mBuilding CXX object CMakeFiles/listener.dir/src/subscriber_member_function.cpp.o\x1b[0m\n'}
[0.293272] (-) TimerEvent: {}
[0.393702] (-) TimerEvent: {}
[0.496606] (-) TimerEvent: {}
[0.597108] (-) TimerEvent: {}
[0.698144] (-) TimerEvent: {}
[0.798751] (-) TimerEvent: {}
[0.899197] (-) TimerEvent: {}
[0.999725] (-) TimerEvent: {}
[1.104200] (-) TimerEvent: {}
[1.204641] (-) TimerEvent: {}
[1.306166] (-) TimerEvent: {}
[1.406632] (-) TimerEvent: {}
[1.507236] (-) TimerEvent: {}
[1.610242] (-) TimerEvent: {}
[1.710824] (-) TimerEvent: {}
[1.811687] (-) TimerEvent: {}
[1.912281] (-) TimerEvent: {}
[2.015778] (-) TimerEvent: {}
[2.116268] (-) TimerEvent: {}
[2.216695] (-) TimerEvent: {}
[2.317212] (-) TimerEvent: {}
[2.417706] (-) TimerEvent: {}
[2.520334] (-) TimerEvent: {}
[2.622783] (-) TimerEvent: {}
[2.723216] (-) TimerEvent: {}
[2.823761] (-) TimerEvent: {}
[2.928958] (-) TimerEvent: {}
[3.029823] (-) TimerEvent: {}
[3.130290] (-) TimerEvent: {}
[3.230767] (-) TimerEvent: {}
[3.337788] (-) TimerEvent: {}
[3.438901] (-) TimerEvent: {}
[3.540878] (-) TimerEvent: {}
[3.641670] (-) TimerEvent: {}
[3.744545] (-) TimerEvent: {}
[3.845161] (-) TimerEvent: {}
[3.946227] (-) TimerEvent: {}
[4.046690] (-) TimerEvent: {}
[4.147356] (-) TimerEvent: {}
[4.250736] (-) TimerEvent: {}
[4.351302] (-) TimerEvent: {}
[4.451807] (-) TimerEvent: {}
[4.552298] (-) TimerEvent: {}
[4.657732] (-) TimerEvent: {}
[4.758186] (-) TimerEvent: {}
[4.860673] (-) TimerEvent: {}
[4.961962] (-) TimerEvent: {}
[5.062533] (-) TimerEvent: {}
[5.163606] (-) TimerEvent: {}
[5.264208] (-) TimerEvent: {}
[5.366583] (-) TimerEvent: {}
[5.467486] (-) TimerEvent: {}
[5.574192] (-) TimerEvent: {}
[5.674772] (-) TimerEvent: {}
[5.775278] (-) TimerEvent: {}
[5.875803] (-) TimerEvent: {}
[5.979002] (-) TimerEvent: {}
[6.079827] (-) TimerEvent: {}
[6.180292] (-) TimerEvent: {}
[6.283768] (-) TimerEvent: {}
[6.384917] (-) TimerEvent: {}
[6.498582] (-) TimerEvent: {}
[6.602541] (-) TimerEvent: {}
[6.704408] (-) TimerEvent: {}
[6.813193] (-) TimerEvent: {}
[6.913552] (-) TimerEvent: {}
[7.014887] (-) TimerEvent: {}
[7.115940] (-) TimerEvent: {}
[7.230032] (-) TimerEvent: {}
[7.290257] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KMinimalSubscriber::MinimalSubscriber()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.291895] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:70:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >::SharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99)\n'}
[7.297310] (cpp_pubsub) StderrLine: {'line': b'   70 |         "image", qos, &MinimalSubscriber::topic_callback\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[7.303720] (cpp_pubsub) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[7.305172] (cpp_pubsub) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/memory:81\x1b[m\x1b[K,\n'}
[7.313035] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:17\x1b[m\x1b[K:\n'}
[7.314934] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:309:19:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.315613] (cpp_pubsub) StderrLine: {'line': b'  309 |       shared_ptr& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr&) noexcept = default;\n'}
[7.315925] (cpp_pubsub) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.316740] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:309:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.316957] (cpp_pubsub) StderrLine: {'line': b'  309 |       shared_ptr& operator=(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default;\n'}
[7.317083] (cpp_pubsub) StderrLine: {'line': b'      |                             \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.319933] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:313:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.320316] (cpp_pubsub) StderrLine: {'line': b'  313 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr<_Yp>& __r) noexcept\n'}
[7.320474] (cpp_pubsub) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.320713] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:313:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.320855] (cpp_pubsub) StderrLine: {'line': b'/usr/include/c++/9/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > > >&; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.320979] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:313:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.332946] (-) TimerEvent: {}
[7.333258] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:70:57:\x1b[m\x1b[K   required from here\n'}
[7.333443] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:111:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.333595] (cpp_pubsub) StderrLine: {'line': b'  111 |  using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[7.333716] (cpp_pubsub) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.339433] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:324:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.339640] (cpp_pubsub) StderrLine: {'line': b'  324 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(auto_ptr<_Yp>&& __r)\n'}
[7.339777] (cpp_pubsub) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.339895] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:324:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.340012] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:70:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.340133] (cpp_pubsub) StderrLine: {'line': b'   70 |         "image", qos, &MinimalSubscriber::topic_callback\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[7.340249] (cpp_pubsub) StderrLine: {'line': b'      |                                                         \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.340364] (cpp_pubsub) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/memory:81\x1b[m\x1b[K,\n'}
[7.340479] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:17\x1b[m\x1b[K:\n'}
[7.346509] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:333:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.346739] (cpp_pubsub) StderrLine: {'line': b'  333 |       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr&& __r) noexcept\n'}
[7.346863] (cpp_pubsub) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.346981] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:333:30:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.347196] (cpp_pubsub) StderrLine: {'line': b'  333 |       operator=(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[7.347345] (cpp_pubsub) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[7.347663] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:341:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.347832] (cpp_pubsub) StderrLine: {'line': b'  341 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr<_Yp>&& __r) noexcept\n'}
[7.347953] (cpp_pubsub) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.348068] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:341:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.348185] (cpp_pubsub) StderrLine: {'line': b'/usr/include/c++/9/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > > >; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.350794] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:341:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.350950] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:70:57:\x1b[m\x1b[K   required from here\n'}
[7.351080] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:111:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.351202] (cpp_pubsub) StderrLine: {'line': b'  111 |  using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[7.359834] (cpp_pubsub) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.360069] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:349:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.362951] (cpp_pubsub) StderrLine: {'line': b'  349 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(unique_ptr<_Yp, _Del>&& __r)\n'}
[7.363166] (cpp_pubsub) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.363307] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:349:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.363426] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:70:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.363548] (cpp_pubsub) StderrLine: {'line': b'   70 |         "image", qos, &MinimalSubscriber::topic_callback\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[7.363665] (cpp_pubsub) StderrLine: {'line': b'      |                                                         \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.433119] (-) TimerEvent: {}
[7.533994] (-) TimerEvent: {}
[7.635861] (-) TimerEvent: {}
[7.737000] (-) TimerEvent: {}
[7.840093] (-) TimerEvent: {}
[7.940622] (-) TimerEvent: {}
[8.041540] (-) TimerEvent: {}
[8.058649] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid MinimalSubscriber::topic_callback(std_msgs::msg::String_<std::allocator<void> >::ConstSharedPtr) const\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.059343] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:121:67:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kmsg\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[8.059616] (cpp_pubsub) StderrLine: {'line': b'  121 |   void topic_callback(\x1b[01;35m\x1b[Kconst std_msgs::msg::String::ConstSharedPtr msg\x1b[m\x1b[K) const\n'}
[8.060116] (cpp_pubsub) StderrLine: {'line': b'      |                       \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[8.142092] (-) TimerEvent: {}
[8.243849] (-) TimerEvent: {}
[8.348937] (-) TimerEvent: {}
[8.450247] (-) TimerEvent: {}
[8.554092] (-) TimerEvent: {}
[8.658362] (-) TimerEvent: {}
[8.758876] (-) TimerEvent: {}
[8.861924] (-) TimerEvent: {}
[8.966075] (-) TimerEvent: {}
[9.067619] (-) TimerEvent: {}
[9.170390] (-) TimerEvent: {}
[9.273114] (-) TimerEvent: {}
[9.374681] (-) TimerEvent: {}
[9.478074] (-) TimerEvent: {}
[9.581546] (-) TimerEvent: {}
[9.690340] (-) TimerEvent: {}
[9.714738] (cpp_pubsub) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/subscription_base.hpp:29\x1b[m\x1b[K,\n'}
[9.715029] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/callback_group.hpp:26\x1b[m\x1b[K,\n'}
[9.716213] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[9.716410] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[9.723171] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[9.723590] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[9.723795] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executor.hpp:36\x1b[m\x1b[K,\n'}
[9.723975] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/multi_threaded_executor.hpp:26\x1b[m\x1b[K,\n'}
[9.724153] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[9.725487] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[9.726937] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:20\x1b[m\x1b[K:\n'}
[9.728427] (cpp_pubsub) StderrLine: {'line': b'/opt/ros/galactic/include/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const; MessageT = MinimalSubscriber; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.728936] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/subscription_factory.hpp:97:3:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const; AllocatorT = std::allocator<void>; CallbackMessageT = MinimalSubscriber; SubscriptionT = rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.729335] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const; AllocatorT = std::allocator<void>; CallbackMessageT = MinimalSubscriber; SubscriptionT = rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.730072] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/create_subscription.hpp:197:94:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const; AllocatorT = std::allocator<void>; CallbackMessageT = MinimalSubscriber; SubscriptionT = rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.730299] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/node_impl.hpp:100:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const; AllocatorT = std::allocator<void>; CallbackMessageT = MinimalSubscriber; SubscriptionT = rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.730545] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:70:57:\x1b[m\x1b[K   required from here\n'}
[9.730781] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/any_subscription_callback.hpp:185:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::AnySubscriptionCallbackHelper<MinimalSubscriber, std::allocator<void> >::variant_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)> >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<MinimalSubscriber, void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(MinimalSubscriber&, std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99})\n'}
[9.730967] (cpp_pubsub) StderrLine: {'line': b'  185 |       \x1b[01;31m\x1b[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[9.735439] (cpp_pubsub) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.735596] (cpp_pubsub) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/any_subscription_callback.hpp:23\x1b[m\x1b[K,\n'}
[9.735719] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/subscription_base.hpp:29\x1b[m\x1b[K,\n'}
[9.735856] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/callback_group.hpp:26\x1b[m\x1b[K,\n'}
[9.735972] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[9.736142] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[9.736261] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[9.736376] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[9.736490] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executor.hpp:36\x1b[m\x1b[K,\n'}
[9.736605] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/multi_threaded_executor.hpp:26\x1b[m\x1b[K,\n'}
[9.736720] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[9.736833] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[9.744600] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:20\x1b[m\x1b[K:\n'}
[9.744993] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/variant:1291:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.745153] (cpp_pubsub) StderrLine: {'line': b' 1291 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[9.745274] (cpp_pubsub) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.745398] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/variant:1291:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<MinimalSubscriber, void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(MinimalSubscriber&, std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.745540] (cpp_pubsub) StderrLine: {'line': b' 1291 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[9.745656] (cpp_pubsub) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.745806] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/variant:1292:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.745942] (cpp_pubsub) StderrLine: {'line': b' 1292 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[9.746057] (cpp_pubsub) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.746171] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/variant:1292:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<MinimalSubscriber, void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(MinimalSubscriber&, std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.754274] (cpp_pubsub) StderrLine: {'line': b' 1292 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[9.754452] (cpp_pubsub) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[9.762457] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/variant:1354:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.762772] (cpp_pubsub) StderrLine: {'line': b' 1354 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[9.762897] (cpp_pubsub) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.763015] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/variant:1354:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.763184] (cpp_pubsub) StderrLine: {'line': b'/usr/include/c++/9/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(MinimalSubscriber&, std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >)>&&; <template-parameter-2-2> = std::enable_if<true, void>::type; _Types = {std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.763593] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/variant:1350:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(MinimalSubscriber&, std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.763856] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/any_subscription_callback.hpp:185:25:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const; MessageT = MinimalSubscriber; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.764082] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/subscription_factory.hpp:97:3:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const; AllocatorT = std::allocator<void>; CallbackMessageT = MinimalSubscriber; SubscriptionT = rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.766448] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const; AllocatorT = std::allocator<void>; CallbackMessageT = MinimalSubscriber; SubscriptionT = rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.766712] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/create_subscription.hpp:197:94:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const; AllocatorT = std::allocator<void>; CallbackMessageT = MinimalSubscriber; SubscriptionT = rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.766874] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/node_impl.hpp:100:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const; AllocatorT = std::allocator<void>; CallbackMessageT = MinimalSubscriber; SubscriptionT = rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.767520] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:70:57:\x1b[m\x1b[K   required from here\n'}
[9.767670] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/variant:1268:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.767801] (cpp_pubsub) StderrLine: {'line': b' 1268 |  using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[9.767919] (cpp_pubsub) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.791410] (-) TimerEvent: {}
[9.892135] (-) TimerEvent: {}
[9.993632] (-) TimerEvent: {}
[10.096322] (-) TimerEvent: {}
[10.197910] (-) TimerEvent: {}
[10.298704] (-) TimerEvent: {}
[10.399869] (-) TimerEvent: {}
[10.500362] (-) TimerEvent: {}
[10.603336] (-) TimerEvent: {}
[10.707322] (-) TimerEvent: {}
[10.809515] (-) TimerEvent: {}
[10.910276] (-) TimerEvent: {}
[11.013771] (-) TimerEvent: {}
[11.116258] (-) TimerEvent: {}
[11.216777] (-) TimerEvent: {}
[11.328171] (-) TimerEvent: {}
[11.430781] (-) TimerEvent: {}
[11.532986] (-) TimerEvent: {}
[11.634025] (-) TimerEvent: {}
[11.739896] (-) TimerEvent: {}
[11.841534] (-) TimerEvent: {}
[11.942036] (-) TimerEvent: {}
[12.043014] (-) TimerEvent: {}
[12.143894] (-) TimerEvent: {}
[12.247444] (-) TimerEvent: {}
[12.347928] (-) TimerEvent: {}
[12.462282] (-) TimerEvent: {}
[12.562801] (-) TimerEvent: {}
[12.670982] (-) TimerEvent: {}
[12.773492] (-) TimerEvent: {}
[12.875910] (-) TimerEvent: {}
[12.984219] (-) TimerEvent: {}
[13.088801] (-) TimerEvent: {}
[13.192282] (-) TimerEvent: {}
[13.294495] (-) TimerEvent: {}
[13.409322] (-) TimerEvent: {}
[13.510395] (-) TimerEvent: {}
[13.610866] (-) TimerEvent: {}
[13.617892] (cpp_pubsub) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33\x1b[m\x1b[K,\n'}
[13.618180] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/bits/allocator.h:46\x1b[m\x1b[K,\n'}
[13.618468] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/string:41\x1b[m\x1b[K,\n'}
[13.627274] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/stdexcept:39\x1b[m\x1b[K,\n'}
[13.630056] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/array:39\x1b[m\x1b[K,\n'}
[13.632679] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/tuple:39\x1b[m\x1b[K,\n'}
[13.632989] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/functional:54\x1b[m\x1b[K,\n'}
[13.635353] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:16\x1b[m\x1b[K:\n'}
[13.635651] (cpp_pubsub) StderrLine: {'line': b'/usr/include/c++/9/ext/new_allocator.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = MinimalSubscriber; _Args = {const MinimalSubscriber&}; _Tp = MinimalSubscriber]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[13.636334] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/alloc_traits.h:482:2:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = MinimalSubscriber; _Args = {const MinimalSubscriber&}; _Tp = MinimalSubscriber; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<MinimalSubscriber>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[13.636590] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/experimental/buffers/intra_process_buffer.hpp:168:34:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename std::enable_if<std::is_same<DestinationT, std::unique_ptr<MessageT, MessageDeleter> >::value>::type rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::add_shared_impl(rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr) [with DestinationT = std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >; MessageT = MinimalSubscriber; Alloc = std::allocator<void>; MessageDeleter = std::default_delete<MinimalSubscriber>; BufferT = std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >; typename std::enable_if<std::is_same<DestinationT, std::unique_ptr<MessageT, MessageDeleter> >::value>::type = void; rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr = std::shared_ptr<const MinimalSubscriber>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[13.639184] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/experimental/buffers/intra_process_buffer.hpp:107:5:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::add_shared(rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr) [with MessageT = MinimalSubscriber; Alloc = std::allocator<void>; MessageDeleter = std::default_delete<MinimalSubscriber>; BufferT = std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >; rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr = std::shared_ptr<const MinimalSubscriber>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[13.639429] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/experimental/buffers/intra_process_buffer.hpp:105:8:\x1b[m\x1b[K   required from here\n'}
[13.639558] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/ext/new_allocator.h:145:20:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of deleted function \xe2\x80\x98\x1b[01m\x1b[KMinimalSubscriber::MinimalSubscriber(const MinimalSubscriber&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[13.639700] (cpp_pubsub) StderrLine: {'line': b'  145 |  noexcept(noexcept(\x1b[01;31m\x1b[K::new((void *)__p)\x1b[m\x1b[K\n'}
[13.639819] (cpp_pubsub) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[13.639940] (cpp_pubsub) StderrLine: {'line': b'  146 | \x1b[01;31m\x1b[K       _Up(std::forward<_Args>(__args)...)\x1b[m\x1b[K))\n'}
[13.643231] (cpp_pubsub) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[13.643593] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:35:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KMinimalSubscriber::MinimalSubscriber(const MinimalSubscriber&)\x1b[m\x1b[K\xe2\x80\x99 is implicitly deleted because the default definition would be ill-formed:\n'}
[13.643722] (cpp_pubsub) StderrLine: {'line': b'   35 | class \x1b[01;36m\x1b[KMinimalSubscriber\x1b[m\x1b[K : public rclcpp::Node\n'}
[13.643856] (cpp_pubsub) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[13.646122] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:35:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of deleted function \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Node::Node(const rclcpp::Node&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[13.646311] (cpp_pubsub) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/context.hpp:34\x1b[m\x1b[K,\n'}
[13.646434] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executor.hpp:33\x1b[m\x1b[K,\n'}
[13.646552] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/multi_threaded_executor.hpp:26\x1b[m\x1b[K,\n'}
[13.646668] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[13.646809] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[13.647421] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:20\x1b[m\x1b[K:\n'}
[13.647677] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/node.hpp:1293:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[13.647806] (cpp_pubsub) StderrLine: {'line': b' 1293 |   \x1b[01;36m\x1b[KRCLCPP_DISABLE_COPY\x1b[m\x1b[K(Node)\n'}
[13.650462] (cpp_pubsub) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[13.711074] (-) TimerEvent: {}
[13.813200] (-) TimerEvent: {}
[13.914708] (-) TimerEvent: {}
[14.015953] (-) TimerEvent: {}
[14.116596] (-) TimerEvent: {}
[14.219182] (-) TimerEvent: {}
[14.325256] (-) TimerEvent: {}
[14.425943] (-) TimerEvent: {}
[14.526428] (-) TimerEvent: {}
[14.627848] (-) TimerEvent: {}
[14.729311] (-) TimerEvent: {}
[14.825842] (cpp_pubsub) StderrLine: {'line': b'make[2]: *** [CMakeFiles/listener.dir/build.make:63: CMakeFiles/listener.dir/src/subscriber_member_function.cpp.o] Error 1\n'}
[14.827895] (cpp_pubsub) StderrLine: {'line': b'make[1]: *** [CMakeFiles/Makefile2:80: CMakeFiles/listener.dir/all] Error 2\n'}
[14.828109] (cpp_pubsub) StderrLine: {'line': b'make: *** [Makefile:141: all] Error 2\n'}
[14.832368] (cpp_pubsub) CommandEnded: {'returncode': 2}
[14.834585] (-) TimerEvent: {}
[14.940958] (cpp_pubsub) JobEnded: {'identifier': 'cpp_pubsub', 'rc': 2}
[14.951049] (-) TimerEvent: {}
[14.951571] (-) EventReactorShutdown: {}
