[01m[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:[m[K In constructor â€˜[01m[KMinimalSubscriber::MinimalSubscriber()[m[Kâ€™:
[01m[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:70:57:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > > >[m[Kâ€™)
   70 |         "image", qos, &MinimalSubscriber::topic_callback[01;31m[K)[m[K;
      |                                                         [01;31m[K^[m[K
In file included from [01m[K/usr/include/c++/9/memory:81[m[K,
                 from [01m[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:17[m[K:
[01m[K/usr/include/c++/9/bits/shared_ptr.h:309:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >][m[Kâ€™
  309 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
      |                   [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/shared_ptr.h:309:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&[m[Kâ€™
  309 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
      |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/shared_ptr.h:313:2:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >][m[Kâ€™
  313 |  [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
      |  [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/shared_ptr.h:313:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/9/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > > >&; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >][m[Kâ€™:
[01m[K/usr/include/c++/9/bits/shared_ptr.h:313:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >][m[Kâ€™
[01m[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:70:57:[m[K   required from here
[01m[K/usr/include/c++/9/bits/shared_ptr.h:111:8:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&>[m[Kâ€™
  111 |  using [01;31m[K_Assignable[m[K = typename enable_if<
      |        [01;31m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/shared_ptr.h:324:2:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >][m[Kâ€™
  324 |  [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
      |  [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/shared_ptr.h:324:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:70:57:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
   70 |         "image", qos, &MinimalSubscriber::topic_callback[01;36m[K)[m[K;
      |                                                         [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/memory:81[m[K,
                 from [01m[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:17[m[K:
[01m[K/usr/include/c++/9/bits/shared_ptr.h:333:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >][m[Kâ€™
  333 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/shared_ptr.h:333:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&&[m[Kâ€™
  333 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
      |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/bits/shared_ptr.h:341:2:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >][m[Kâ€™
  341 |  [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
      |  [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/shared_ptr.h:341:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/9/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > > >; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >][m[Kâ€™:
[01m[K/usr/include/c++/9/bits/shared_ptr.h:341:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >][m[Kâ€™
[01m[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:70:57:[m[K   required from here
[01m[K/usr/include/c++/9/bits/shared_ptr.h:111:8:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&>[m[Kâ€™
  111 |  using [01;31m[K_Assignable[m[K = typename enable_if<
      |        [01;31m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/shared_ptr.h:349:2:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >][m[Kâ€™
  349 |  [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
      |  [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/shared_ptr.h:349:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:70:57:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
   70 |         "image", qos, &MinimalSubscriber::topic_callback[01;36m[K)[m[K;
      |                                                         [01;36m[K^[m[K
[01m[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:[m[K In member function â€˜[01m[Kvoid MinimalSubscriber::topic_callback(std_msgs::msg::String_<std::allocator<void> >::ConstSharedPtr) const[m[Kâ€™:
[01m[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:121:67:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kmsg[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
  121 |   void topic_callback([01;35m[Kconst std_msgs::msg::String::ConstSharedPtr msg[m[K) const
      |                       [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/subscription_base.hpp:29[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/callback_group.hpp:26[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/memory_strategy.hpp:25[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executor_options.hpp:20[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executor.hpp:36[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors/multi_threaded_executor.hpp:26[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:20[m[K:
/opt/ros/galactic/include/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const; MessageT = MinimalSubscriber; AllocatorT = std::allocator<void>][m[Kâ€™:
[01m[K/opt/ros/galactic/include/rclcpp/subscription_factory.hpp:97:3:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const; AllocatorT = std::allocator<void>; CallbackMessageT = MinimalSubscriber; SubscriptionT = rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/galactic/include/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const; AllocatorT = std::allocator<void>; CallbackMessageT = MinimalSubscriber; SubscriptionT = rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/galactic/include/rclcpp/create_subscription.hpp:197:94:[m[K   required from â€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const; AllocatorT = std::allocator<void>; CallbackMessageT = MinimalSubscriber; SubscriptionT = rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/galactic/include/rclcpp/node_impl.hpp:100:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const; AllocatorT = std::allocator<void>; CallbackMessageT = MinimalSubscriber; SubscriptionT = rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >][m[Kâ€™
[01m[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:70:57:[m[K   required from here
[01m[K/opt/ros/galactic/include/rclcpp/any_subscription_callback.hpp:185:25:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::detail::AnySubscriptionCallbackHelper<MinimalSubscriber, std::allocator<void> >::variant_type[m[Kâ€™ {aka â€˜[01m[Kstd::variant<std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)> >[m[Kâ€™} and â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<MinimalSubscriber, void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(MinimalSubscriber&, std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >)>[m[Kâ€™})
  185 |       [01;31m[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/any_subscription_callback.hpp:23[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/subscription_base.hpp:29[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/callback_group.hpp:26[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/memory_strategy.hpp:25[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executor_options.hpp:20[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executor.hpp:36[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors/multi_threaded_executor.hpp:26[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:20[m[K:
[01m[K/usr/include/c++/9/variant:1291:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)>}][m[Kâ€™
 1291 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
      |                [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/variant:1291:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<MinimalSubscriber, void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(MinimalSubscriber&, std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >)>[m[Kâ€™} to â€˜[01m[Kconst std::variant<std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)> >&[m[Kâ€™
 1291 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
      |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/variant:1292:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)>}][m[Kâ€™
 1292 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
      |                [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/variant:1292:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<MinimalSubscriber, void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(MinimalSubscriber&, std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >)>[m[Kâ€™} to â€˜[01m[Kstd::variant<std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)> >&&[m[Kâ€™
 1292 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
      |                          [01;36m[K^~~~~~~~~[m[K
[01m[K/usr/include/c++/9/variant:1354:2:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)>}][m[Kâ€™
 1354 |  [01;36m[Koperator[m[K=(_Tp&& __rhs)
      |  [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/variant:1354:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/9/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(MinimalSubscriber&, std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >)>&&; <template-parameter-2-2> = std::enable_if<true, void>::type; _Types = {std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)>}][m[Kâ€™:
[01m[K/usr/include/c++/9/variant:1350:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const MinimalSubscriber&)>, std::function<void(const MinimalSubscriber&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >)>, std::function<void(std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const MinimalSubscriber>)>, std::function<void(std::shared_ptr<const MinimalSubscriber>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&)>, std::function<void(const std::shared_ptr<const MinimalSubscriber>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<MinimalSubscriber>)>, std::function<void(std::shared_ptr<MinimalSubscriber>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(MinimalSubscriber&, std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >)>][m[Kâ€™
[01m[K/opt/ros/galactic/include/rclcpp/any_subscription_callback.hpp:185:25:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const; MessageT = MinimalSubscriber; AllocatorT = std::allocator<void>][m[Kâ€™
[01m[K/opt/ros/galactic/include/rclcpp/subscription_factory.hpp:97:3:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const; AllocatorT = std::allocator<void>; CallbackMessageT = MinimalSubscriber; SubscriptionT = rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/galactic/include/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const; AllocatorT = std::allocator<void>; CallbackMessageT = MinimalSubscriber; SubscriptionT = rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/galactic/include/rclcpp/create_subscription.hpp:197:94:[m[K   required from â€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const; AllocatorT = std::allocator<void>; CallbackMessageT = MinimalSubscriber; SubscriptionT = rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/galactic/include/rclcpp/node_impl.hpp:100:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = void (MinimalSubscriber::*)(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >) const; AllocatorT = std::allocator<void>; CallbackMessageT = MinimalSubscriber; SubscriptionT = rclcpp::Subscription<MinimalSubscriber, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<MinimalSubscriber, std::allocator<void> > >][m[Kâ€™
[01m[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:70:57:[m[K   required from here
[01m[K/usr/include/c++/9/variant:1268:8:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
 1268 |  using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
      |        [01;31m[K^~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33[m[K,
                 from [01m[K/usr/include/c++/9/bits/allocator.h:46[m[K,
                 from [01m[K/usr/include/c++/9/string:41[m[K,
                 from [01m[K/usr/include/c++/9/stdexcept:39[m[K,
                 from [01m[K/usr/include/c++/9/array:39[m[K,
                 from [01m[K/usr/include/c++/9/tuple:39[m[K,
                 from [01m[K/usr/include/c++/9/functional:54[m[K,
                 from [01m[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:16[m[K:
/usr/include/c++/9/ext/new_allocator.h: In instantiation of â€˜[01m[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = MinimalSubscriber; _Args = {const MinimalSubscriber&}; _Tp = MinimalSubscriber][m[Kâ€™:
[01m[K/usr/include/c++/9/bits/alloc_traits.h:482:2:[m[K   required from â€˜[01m[Kstatic void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = MinimalSubscriber; _Args = {const MinimalSubscriber&}; _Tp = MinimalSubscriber; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<MinimalSubscriber>][m[Kâ€™
[01m[K/opt/ros/galactic/include/rclcpp/experimental/buffers/intra_process_buffer.hpp:168:34:[m[K   required from â€˜[01m[Ktypename std::enable_if<std::is_same<DestinationT, std::unique_ptr<MessageT, MessageDeleter> >::value>::type rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::add_shared_impl(rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr) [with DestinationT = std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >; MessageT = MinimalSubscriber; Alloc = std::allocator<void>; MessageDeleter = std::default_delete<MinimalSubscriber>; BufferT = std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >; typename std::enable_if<std::is_same<DestinationT, std::unique_ptr<MessageT, MessageDeleter> >::value>::type = void; rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr = std::shared_ptr<const MinimalSubscriber>][m[Kâ€™
[01m[K/opt/ros/galactic/include/rclcpp/experimental/buffers/intra_process_buffer.hpp:107:5:[m[K   required from â€˜[01m[Kvoid rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::add_shared(rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr) [with MessageT = MinimalSubscriber; Alloc = std::allocator<void>; MessageDeleter = std::default_delete<MinimalSubscriber>; BufferT = std::unique_ptr<MinimalSubscriber, std::default_delete<MinimalSubscriber> >; rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr = std::shared_ptr<const MinimalSubscriber>][m[Kâ€™
[01m[K/opt/ros/galactic/include/rclcpp/experimental/buffers/intra_process_buffer.hpp:105:8:[m[K   required from here
[01m[K/usr/include/c++/9/ext/new_allocator.h:145:20:[m[K [01;31m[Kerror: [m[Kuse of deleted function â€˜[01m[KMinimalSubscriber::MinimalSubscriber(const MinimalSubscriber&)[m[Kâ€™
  145 |  noexcept(noexcept([01;31m[K::new((void *)__p)[m[K
      |                    [01;31m[K^~~~~~~~~~~~~~~~~~[m[K
  146 | [01;31m[K       _Up(std::forward<_Args>(__args)...)[m[K))
      |        [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:35:7:[m[K [01;36m[Knote: [m[Kâ€˜[01m[KMinimalSubscriber::MinimalSubscriber(const MinimalSubscriber&)[m[Kâ€™ is implicitly deleted because the default definition would be ill-formed:
   35 | class [01;36m[KMinimalSubscriber[m[K : public rclcpp::Node
      |       [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:35:7:[m[K [01;31m[Kerror: [m[Kuse of deleted function â€˜[01m[Krclcpp::Node::Node(const rclcpp::Node&)[m[Kâ€™
In file included from [01m[K/opt/ros/galactic/include/rclcpp/context.hpp:34[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executor.hpp:33[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors/multi_threaded_executor.hpp:26[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/rtsd-user/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:20[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:1293:3:[m[K [01;36m[Knote: [m[Kdeclared here
 1293 |   [01;36m[KRCLCPP_DISABLE_COPY[m[K(Node)
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
make[2]: *** [CMakeFiles/listener.dir/build.make:63: CMakeFiles/listener.dir/src/subscriber_member_function.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:80: CMakeFiles/listener.dir/all] Error 2
make: *** [Makefile:141: all] Error 2
